(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{241:function(t,a,s){t.exports=s.p+"assets/img/luoxiaosheng.3e3f64f6.svg"},242:function(t,a,s){t.exports=s.p+"assets/img/luoxiaosheng_learning.c39ce245.svg"},243:function(t,a,s){t.exports=s.p+"assets/img/luoxiaosheng_wechat.8efd3324.svg"},358:function(t,a,s){"use strict";s.r(a);var e=s(14),v=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_0-1learning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-1learning"}},[t._v("#")]),t._v(" 0-1Learning")]),t._v(" "),a("p",[a("img",{attrs:{src:s(241),alt:"alt text",title:"公众号"}}),t._v(" "),a("img",{attrs:{src:s(242),alt:"alt text",title:"学习"}}),t._v(" "),a("img",{attrs:{src:s(243),alt:"alt text",title:"微信"}})]),t._v(" "),a("h2",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("h3",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("ul",[a("li",[t._v("数组是编程语言中常见的一种数据结构，可以存储多个数据，每个数组元素存放一个数据，通常可以通过数组元素的索引来访问数组元素，包括赋值，取值")]),t._v(" "),a("li",[t._v("Java中的数组要求所有的数组元素具有相同的数据类型。因此在一个数组中，数组元素的类型是唯一的，即一个数组只能存储一种数据类型的数组。")]),t._v(" "),a("li",[t._v("Java的数组即可以存储基本类型的数据，也可以存储引用类型的数据，只要数组元素的类型统一即可。")])]),t._v(" "),a("h3",{attrs:{id:"要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#要点"}},[t._v("#")]),t._v(" 要点")]),t._v(" "),a("ul",[a("li",[t._v("数组的概念")]),t._v(" "),a("li",[t._v("数组的内存模型")]),t._v(" "),a("li",[t._v("理解数组的数组")])]),t._v(" "),a("h3",{attrs:{id:"数组的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的定义"}},[t._v("#")]),t._v(" 数组的定义")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数组的基本概念")]),t._v(" "),a("ul",[a("li",[t._v("数组的名称 – name")]),t._v(" "),a("li",[t._v("数组的类型 -- type")]),t._v(" "),a("li",[t._v("数组的元素")]),t._v(" "),a("li",[t._v("数组的索引 -- index")]),t._v(" "),a("li",[t._v("数组的长度 -- length")])])]),t._v(" "),a("li",[a("p",[t._v("定义数组的语法")]),t._v(" "),a("ul",[a("li",[t._v("int[] myArray；")]),t._v(" "),a("li",[t._v("int myArray[]")])])])]),t._v(" "),a("h3",{attrs:{id:"创建数组步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建数组步骤"}},[t._v("#")]),t._v(" 创建数组步骤")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//声明数组    \nint[ ] myNumbers;\n//构造数组\nmyNumbers = new int[20];\n//初始化数组\nmyNumbers [ 0 ] = 5;\nmyNumbers [ 1 ] = 10;\nmyNumbers [ 2 ] = 15;\nmyNumbers [ 3 ] = 20;\n")])])]),a("h3",{attrs:{id:"数组的默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的默认值"}},[t._v("#")]),t._v(" 数组的默认值")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("byte")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("short")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("char")]),t._v(" "),a("td",[t._v("'\\u0000'")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("long")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("0L")])]),t._v(" "),a("tr",[a("td",[t._v("float")]),t._v(" "),a("td",[t._v("0.0")]),t._v(" "),a("td",[t._v("0.0F")])]),t._v(" "),a("tr",[a("td",[t._v("double")]),t._v(" "),a("td",[t._v("0.0")]),t._v(" "),a("td",[t._v("0.0D")])]),t._v(" "),a("tr",[a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("引用类型")]),t._v(" "),a("td",[t._v("null")]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"数组的内存模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的内存模型"}},[t._v("#")]),t._v(" 数组的内存模型")]),t._v(" "),a("p",[t._v("int[ ] array = new int [4] ;")]),t._v(" "),a("ul",[a("li",[t._v("数组是存储多个相同类型变量的对象。数组的所有元素保存在堆内存中。")]),t._v(" "),a("li",[t._v("创建一个数组就是在堆中创建一个数组对象。")]),t._v(" "),a("li",[t._v("数组创建后立即拥有默认值。")]),t._v(" "),a("li",[t._v("索引从0开始。")]),t._v(" "),a("li",[t._v("连续分配")])]),t._v(" "),a("h3",{attrs:{id:"数组的初始化、赋值等操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的初始化、赋值等操作"}},[t._v("#")]),t._v(" 数组的初始化、赋值等操作")]),t._v(" "),a("ul",[a("li",[t._v("静态初始化")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    int[ ] point = {1,2,3,4,5,6,7,8,9};\n    int[ ] point = new int[ ]{1,2,3,4};\n")])])]),a("ul",[a("li",[t._v("动态初始化")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    int[ ] point = new int[3];\n")])])]),a("p",[t._v("其他示例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    byte[] byteTest = new byte[128];\n    short[] shortTest = new short[128];\n    char[] charTest = new char[128];\n    int[] intTest = new int[128];\n    long[] longTest = new long[128];\n    float[] floatTest = new float[128];\n    double[] doubleTest = new double[128];\n    boolean[] booleanTest = new boolean[128];\n    Object[] objectTest = new Object[128];\n")])])]),a("p",[a("strong",[t._v("int数组存放char字符可以吗")]),t._v("\n可以")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('int[] count = new int[128];\nchar a = "a".charAt(0);\n//赋值，这里的char a 实际会转义为ASCII码值中的97，即先定位97号位置，然后存入97\ncount[a]=a;\n//自增\ncount[a]++;\n')])])]),a("h3",{attrs:{id:"数组的长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的长度"}},[t._v("#")]),t._v(" 数组的长度")]),t._v(" "),a("ul",[a("li",[t._v("数组的长度(length)必须>=0；")]),t._v(" "),a("li",[t._v("length为只读。")]),t._v(" "),a("li",[t._v("利用length遍历数组")])]),t._v(" "),a("h3",{attrs:{id:"数组常见错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组常见错误"}},[t._v("#")]),t._v(" 数组常见错误")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数组索引越界异常")]),t._v(" "),a("ul",[a("li",[t._v("ArrayIndexOutOfBoundsException")])])]),t._v(" "),a("li",[a("p",[t._v("空指针异常")]),t._v(" "),a("ul",[a("li",[t._v("NullPointException")])])])]),t._v(" "),a("h3",{attrs:{id:"多维数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多维数组"}},[t._v("#")]),t._v(" 多维数组")]),t._v(" "),a("ul",[a("li",[t._v("声明数组")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    * boolean[ ][ ] isFull; boolean isFull[ ][ ]; boolean [ ]isFull[ ];\n")])])]),a("ul",[a("li",[t._v("创建数组")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    * boolean[ ][ ]\tisFull = new boolean[4][3];\n")])])]),a("ul",[a("li",[t._v("初始化")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    * int[ ][ ] point = {{1,2,3},{4,5,6},{7,8,9}};\n    * int[ ][ ] point = new\n    * int[][]{{1,2,3},{4,5,6},{7,8,9}};\n")])])]),a("ul",[a("li",[t._v("多维数据的遍历")])]),t._v(" "),a("h3",{attrs:{id:"锯齿数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#锯齿数组"}},[t._v("#")]),t._v(" 锯齿数组")]),t._v(" "),a("ul",[a("li",[t._v("数组行的长度不同，我们称之为锯齿数组；")]),t._v(" "),a("li",[t._v("静态初始")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    int[ ][ ] point = {{1,2,3}, {4,5}, {7}};\n")])])]),a("ul",[a("li",[t._v("动态初始化")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    int[ ][ ] point = new int[3][ ];\n    point[0] = new int[2]; \n    point[1] = new int[3]; \n    point[2] = new int[4]; \n")])])]),a("p",[t._v("–\t必须指定第1维的长度")]),t._v(" "),a("h3",{attrs:{id:"数组复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组复制"}},[t._v("#")]),t._v(" 数组复制")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("System.arraycopy(Object src, int srcPos, Object dest, int destPos, int length)\n")])])]),a("h3",{attrs:{id:"数组排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组排序"}},[t._v("#")]),t._v(" 数组排序")]),t._v(" "),a("ul",[a("li",[t._v("java.util.Arrays.sort()")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("int[ ] point = {1,6,2,3,9,4,5,7,8};\njava.util.Arrays.sort( point ); \nfor(int i=0;i<point.length;i++){\n    System.out.println(point[i]);\n}\n\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);