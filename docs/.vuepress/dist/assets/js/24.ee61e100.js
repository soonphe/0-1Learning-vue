(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{241:function(t,v,_){t.exports=_.p+"assets/img/luoxiaosheng.3e3f64f6.svg"},242:function(t,v,_){t.exports=_.p+"assets/img/luoxiaosheng_learning.c39ce245.svg"},243:function(t,v,_){t.exports=_.p+"assets/img/luoxiaosheng_wechat.8efd3324.svg"},311:function(t,v,_){t.exports=_.p+"assets/img/java_network.13746cb4.png"},365:function(t,v,_){"use strict";_.r(v);var e=_(14),l=Object(e.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"_0-1learning"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_0-1learning"}},[t._v("#")]),t._v(" 0-1Learning")]),t._v(" "),v("p",[v("img",{attrs:{src:_(241),alt:"alt text",title:"公众号"}}),t._v(" "),v("img",{attrs:{src:_(242),alt:"alt text",title:"学习"}}),t._v(" "),v("img",{attrs:{src:_(243),alt:"alt text",title:"微信"}})]),t._v(" "),v("h2",{attrs:{id:"网络编程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络编程"}},[t._v("#")]),t._v(" 网络编程")]),t._v(" "),v("h3",{attrs:{id:"要点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#要点"}},[t._v("#")]),t._v(" 要点")]),t._v(" "),v("ul",[v("li",[t._v("网络基础知识\n"),v("ul",[v("li",[t._v("OSI参考模型")]),t._v(" "),v("li",[t._v("IP地址和端口号")])])]),t._v(" "),v("li",[t._v("Socket编程\n"),v("ul",[v("li",[t._v("Socket原理")]),t._v(" "),v("li",[t._v("基于TCP的Socket编程")]),t._v(" "),v("li",[t._v("基于多线程的Socket编程")])])])]),t._v(" "),v("h3",{attrs:{id:"网络基础知识"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络基础知识"}},[t._v("#")]),t._v(" 网络基础知识")]),t._v(" "),v("ul",[v("li",[t._v("网络应用程序\n"),v("ul",[v("li",[t._v("在已实现了网络互联的不同的计算机上运行的程序，这些程序之 间可以交换数据\n"),v("img",{attrs:{src:_(311),alt:"alt text"}})])])]),t._v(" "),v("li",[t._v("网络编程 — socket编程\n"),v("ul",[v("li",[t._v("通过使用套接字来达到进程间通信目的编程就是网络编程")])])])]),t._v(" "),v("h3",{attrs:{id:"ip地址和端口号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ip地址和端口号"}},[t._v("#")]),t._v(" IP地址和端口号")]),t._v(" "),v("h4",{attrs:{id:"ip"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ip"}},[t._v("#")]),t._v(" IP")]),t._v(" "),v("ul",[v("li",[t._v("TCP/IP协议\n"),v("ul",[v("li",[t._v("协议 —网络中计算机之间通信的规则")]),t._v(" "),v("li",[t._v("大多数的网络协议都以TCP/IP协议为基础")])])]),t._v(" "),v("li",[t._v("IP地址\n"),v("ul",[v("li",[t._v("IP地址为每台计算机指定一个标识号，通过这个标识号来指定要接收数据的计算机和识别发送 数据的计算机")])])]),t._v(" "),v("li",[t._v("IPV4/IPV6\n"),v("ul",[v("li",[t._v("IPV4—\t4个字节，即32位的二进制数表示")]),t._v(" "),v("li",[t._v("IPV6—\t16个字节的格式来表示IP地址")])])])]),t._v(" "),v("h4",{attrs:{id:"端口号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#端口号"}},[t._v("#")]),t._v(" 端口号")]),t._v(" "),v("p",[t._v("一台计算机运上运行多个网络程序，IP地址只能保证把数据送到该计算机但如何确定把这些数据交给哪个程序呢\n* 端口号是一个整数，用于表示该数据帧交给哪个应用程序来处理\n* 同一台计算机上不能有两个使用同一个端口的程序运行\n* 端口数范围为0~6535\n* 0~1023用于一些知名的网络服务和应用，用户的普通网络程序应使用1024以上的端口号")]),t._v(" "),v("h3",{attrs:{id:"tcp与udp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp与udp"}},[t._v("#")]),t._v(" TCP与UDP")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("TCP（Transmission Control Protocol)")]),t._v(" "),v("ul",[v("li",[t._v("面向连接的通信协议")]),t._v(" "),v("li",[t._v("提供两台计算机间的可靠的、端到端的字节流通信的协议")])])]),t._v(" "),v("li",[v("p",[t._v("UDP（User Datagram Protocal ）")]),t._v(" "),v("ul",[v("li",[t._v("无连接的通信协议")]),t._v(" "),v("li",[t._v("UDP不保证可靠数据的传输")])])])]),t._v(" "),v("h3",{attrs:{id:"socket原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#socket原理"}},[t._v("#")]),t._v(" Socket原理")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("Socket原理")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("Socket—套接字，是通信的基石，是支持TCP/IP协议的网络通信的基本操作单元")])]),t._v(" "),v("li",[v("p",[t._v("是网络应用程序编程的接口和一种机制")])]),t._v(" "),v("li",[v("p",[t._v("包含网络通信必须的五种信息：连接使用的协议，本地主机的IP地址，本地进程的协议端口，远程主机的IP地址，远地进程的协议端口")])]),t._v(" "),v("li",[v("p",[t._v("用套接字中的相关函数来建立连接和完成通信")])]),t._v(" "),v("li",[v("p",[t._v("Socket可以看成在两个程序进行通讯连接中的一个端点")])]),t._v(" "),v("li",[v("p",[t._v("将区分不同应用程序进程的三个参数")]),t._v(" "),v("ul",[v("li",[t._v("通信的目的的IP地址")]),t._v(" "),v("li",[t._v("使用的传输层协议")]),t._v(" "),v("li",[t._v("使用的端口号与一个socket绑定")])])]),t._v(" "),v("li",[v("p",[t._v("建立socket连接至少需要一对套接字，其中一个运行于客户端，称为ClientSocket，另一个运行与服务器，称为ServerSocket。")])]),t._v(" "),v("li",[v("p",[t._v("套接字之间的连接分为三个步骤：服务器监听、客户端请求、连接确认。")])])])]),t._v(" "),v("li",[v("p",[t._v("TCP套接字")]),t._v(" "),v("ul",[v("li",[t._v("较可靠的双向流协议")]),t._v(" "),v("li",[t._v("发送任意数量的数据")]),t._v(" "),v("li",[t._v("提供消息确认、错误检测和错误恢复等服务")])])]),t._v(" "),v("li",[v("p",[t._v("UDP套接字")]),t._v(" "),v("ul",[v("li",[t._v("不可靠")])])])]),t._v(" "),v("h3",{attrs:{id:"基于tcp的socket编程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基于tcp的socket编程"}},[t._v("#")]),t._v(" 基于TCP的Socket编程")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("利用TCP协议进行通信  两个应用程序，有主从之分 一个称为服务器程(Server)， 另外一个称为客户机程(Client)")])]),t._v(" "),v("li",[v("p",[t._v("交互过程\n(1)\t服务器程序创建一个ServerSocket,然后调用accept方法等待客户来连接\n(2)\t客户端程序创建一个socket 并请求与服务器建立连接\n(3)\t刚才建立了连接的两个socket在一个单独的线程上对话\n(4)\t服务器开始等待新的连接请求")])]),t._v(" "),v("li",[v("p",[t._v("基于TCP的Socket编程 —— java.net.ServerSocket")]),t._v(" "),v("ul",[v("li",[t._v("实现服务器套接字")]),t._v(" "),v("li",[t._v("构造函数\n"),v("ul",[v("li",[t._v("ServerSocket(int port)")]),t._v(" "),v("li",[t._v("ServerSocket(int port, int maxqu)")])])]),t._v(" "),v("li",[t._v("accept( ) 方法用于等待客户端触发通信，返回值类型为Socket")])])]),t._v(" "),v("li",[v("p",[t._v("基于TCP 的Socket编程 —— java.net.Socket")]),t._v(" "),v("ul",[v("li",[t._v("实现客户端套接字")]),t._v(" "),v("li",[t._v("构造函数\n"),v("ul",[v("li",[t._v("Socket(String hostName, int port)")]),t._v(" "),v("li",[t._v("Socket(InetAddress a, int port)")])])]),t._v(" "),v("li",[t._v("可用方法\n"),v("ul",[v("li",[t._v("InetAddress getInetAddress( )")]),t._v(" "),v("li",[t._v("int getPort( )")]),t._v(" "),v("li",[t._v("int getLocalPort( )")]),t._v(" "),v("li",[t._v("InputStream getInputStream()")]),t._v(" "),v("li",[t._v("OutputStream getOutputStream()")]),t._v(" "),v("li",[t._v("void close()")])])])])])])])}),[],!1,null,null,null);v.default=l.exports}}]);