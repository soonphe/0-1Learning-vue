(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{241:function(t,e,s){t.exports=s.p+"assets/img/luoxiaosheng.3e3f64f6.svg"},242:function(t,e,s){t.exports=s.p+"assets/img/luoxiaosheng_learning.c39ce245.svg"},243:function(t,e,s){t.exports=s.p+"assets/img/luoxiaosheng_wechat.8efd3324.svg"},341:function(t,e,s){"use strict";s.r(e);var a=s(14),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_0-1learning"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-1learning"}},[t._v("#")]),t._v(" 0-1Learning")]),t._v(" "),e("p",[e("img",{attrs:{src:s(241),alt:"alt text",title:"公众号"}}),t._v(" "),e("img",{attrs:{src:s(242),alt:"alt text",title:"学习"}}),t._v(" "),e("img",{attrs:{src:s(243),alt:"alt text",title:"微信"}})]),t._v(" "),e("h2",{attrs:{id:"html-overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html-overview"}},[t._v("#")]),t._v(" html-overview")]),t._v(" "),e("h3",{attrs:{id:"ajax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" Ajax：")]),t._v(" "),e("p",[t._v('Ajax：“Asynchronous JavaScript and XML”，翻译过来就是异步JavaScript和XML。\n要创建Ajax，主角是XMLHttpRequest（下简称XHR）对象。\n第一步：创建XHR对象\nvar xhr = new XMLHttpRequest();\n第二步：向服务器发送请求\n方法：open(method,url,async) 和 send(string)\nopen()方法传入三参数\n• method：请求的类型（GET/POST）\n• url：文件在服务器上的位置\n• async：布尔值，true表示异步，false表示同步（可选，默认为true）\n1 xhr.open("GET","demo.asp?t=" + Math.random(),true);\n2 xhr.send();\n第三步：服务器响应\nXMLHttpRequest对象的responseText和responseXML属性分别获得字符串形式的响应数据和XML形式的响应数据\n还有三个关于响应状态的属性也经常用到：\n• readyState：存有XMLHttpRequest的状态。XHR对象会经历5种不同的状态\n○ 0：请求未初始化（new完后）；\n○ 1：服务器连接已建立（对象已创建并初始化，尚未调用send方法）；\n○ 2：请求已接收；\n○ 3：请求处理中；\n○ 4：请求已完成，响应就绪；\n• status：（HTTP状态码很多，请自行了解，举例常见的）\n○ 200：请求成功\n○ 404：未找到页面\n• onreadystatechange：存储函数（或函数名），每当readyState属性改变时，就会调用该函数。\n1 xhr.onreadystatechange = function () {\n2     if (xhr.readyState == 4 && xhr.status == 200) {\n3     console.log(xhr.responseText);\n4 };')]),t._v(" "),e("h3",{attrs:{id:"icon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#icon"}},[t._v("#")]),t._v(" Icon")]),t._v(" "),e("ol",[e("li",[t._v("img一个页面的请求资源中图片 img 占了大部分，所以为了优化有了image sprite 就是所谓的雪碧图，\n就是将多个图片合成一个图片，然后利用 css 的 background-position 定位显示不同的 icon 图标，但这个也有一个很大的痛点，维护困难")]),t._v(" "),e("li",[t._v("font 库，常见的如 Font Awesome ，使用起来也非常的方便，定制性也非常的不友善，图标库一共有675个图标")]),t._v(" "),e("li",[t._v("iconfont：几百个公司的开源图标库，还有各式各样的小图标，还支持自定义创建图标库")])]),t._v(" "),e("p",[e("strong",[t._v("iconfont 三种使用姿势")]),t._v("\n1.unicode\n第一步：引入自定义字体 `font-face 第二步：定义使用iconfont的样式 第三步：挑选相应图标并获取字体编码，应用于页面")]),t._v(" "),e("p",[t._v("2.font-class "),e("i",{staticClass:"iconfont icon-xxx"})]),t._v(" "),e("p",[t._v("3.symbol：svg-icon 使用形式慢慢成为主流和推荐\n第一步 引入  ./iconfont.js"),e("br"),t._v("\n引入  ./iconfont.js\n第二步：加入通用css代码（引入一次就行）\n")]),e("style",{attrs:{type:"text/css"}},[t._v("\n.icon {\nwidth: 1em; height: 1em;\nvertical-align: -0.15em;\nfill: currentColor;\noverflow: hidden;\n}\n")]),t._v("\n第三步：挑选相应图标并获取类名，应用于页面：\n"),e("svg",{staticClass:"icon",attrs:{"aria-hidden":"true"}},[e("use",{attrs:{"xlink:href":"#icon-xxx"}})]),e("p"),t._v(" "),e("p",[t._v("使用svg-sprite：引入 svg-sprite-loader\nsvgo：清除svg中多余的东西")]),t._v(" "),e("h3",{attrs:{id:"content-type几种值的区别及用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#content-type几种值的区别及用法"}},[t._v("#")]),t._v(" Content-Type几种值的区别及用法")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("application/json")]),t._v(" "),e("ul",[e("li",[t._v("告诉服务器请求的主题内容是json格式的字符串，服务器端会对json字符串进行解析  好处： 前端不需要关心数据结构的复杂度，只要是标准的json格式就能提交成功。")])])]),t._v(" "),e("li",[e("p",[t._v("application/x-www-form-urlencoded")]),t._v(" "),e("ul",[e("li",[t._v("数据被编码为名称/值对。这是标准的编码格式，是post的默认格式，所有浏览器都支持。")]),t._v(" "),e("li",[t._v("在请求发送过程中会对数据进行序列化处理，以键值对形式？key1=value1&key2=value2的方式发送到服务器")]),t._v(" "),e("li",[t._v("使用js中URLencode转码方法。包括将name、value中的空格替换为加号；将非ascii字符做百分号编码；将input的name、value用‘=’连接，不同的input之间用‘&’连接。")])])]),t._v(" "),e("li",[e("p",[t._v("multipart/form-data")]),t._v(" "),e("ul",[e("li",[t._v("需要在表单中进行文件上传时，就需要使用该格式。常见的媒体格式是上传文件之时使用的")]),t._v(" "),e("li",[t._v("对于一段utf8编码的字节，用application/x-www-form-urlencoded传输其中的ascii字符没有问题，但对于非ascii字符传输效率就很低了（汉字‘丁’从三字节变成了九字节），因此在传很长的字节（如文件）时应用multipart/form-data格式。smtp等协议也使用或借鉴了此格式。")]),t._v(" "),e("li",[t._v("multipart/form-data将表单中的每个input转为了一个由boundary分割的小格式，没有转码，直接将utf8字节拼接到请求体中，在本地有多少字节实际就发送多少字节，极大提高了效率，适合传输长字节。")])])]),t._v(" "),e("li",[e("p",[t._v("text/plain")]),t._v(" "),e("ul",[e("li",[t._v("数据以纯文本形式(text/json/xml/html)进行编码，其中不含任何控件或格式字符。")])])])]),t._v(" "),e("h3",{attrs:{id:"前端调试神器-vconsole和eruda"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端调试神器-vconsole和eruda"}},[t._v("#")]),t._v(" 前端调试神器：vConsole和eruda")]),t._v(" "),e("h3",{attrs:{id:"typescript-是-javascript-的关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-是-javascript-的关系"}},[t._v("#")]),t._v(" TypeScript 是 JavaScript 的关系")]),t._v(" "),e("p",[t._v("TypeScript 是 JavaScript 的类型的超集，它可以编译成纯 JavaScript")]),t._v(" "),e("h3",{attrs:{id:"组件介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件介绍"}},[t._v("#")]),t._v(" 组件介绍")]),t._v(" "),e("ul",[e("li",[e("p",[t._v('element-ui\n"element-ui": "2.7.0",')])]),t._v(" "),e("li",[e("p",[t._v('Normalize.css：供了跨浏览器的高度一致性\n"normalize.css": "7.0.0",\nimport \'normalize.css/normalize.css\'')])]),t._v(" "),e("li",[e("p",[t._v('font-awesome：矢量图标\n"font-awesome": "4.7.0",\nimport \'font-awesome/css/font-awesome.min.css\' // font-awesome')])]),t._v(" "),e("li",[e("p",[t._v('nprogress：进度条\n"nprogress": "0.2.0",\nimport \'nprogress/nprogress.css\';\n使用：')])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import NProgress from 'nprogress' // Progress 进度条\nimport 'nprogress/nprogress.css'// Progress 进度条样式\nrouter.beforeEach((to, from, next) => {\n  NProgress.start()\n  。。。\n  next()\n})\nrouter.afterEach(() => {\n  NProgress.done() // 结束Progress\n})\n")])])]),e("ul",[e("li",[t._v('babel-polyfill：ES6转码ES5\n"babel-polyfill": "^6.26.0",\nimport "babel-polyfill";')])]),t._v(" "),e("h3",{attrs:{id:"引入方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引入方式"}},[t._v("#")]),t._v(" 引入方式")]),t._v(" "),e("ul",[e("li",[t._v("完整引入")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("/*Element：完整引入*/\n  import ElementUI from 'element-ui';\n  import 'element-ui/lib/theme-chalk/index.css';\n")])])]),e("ul",[e("li",[t._v("按需引入")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('/*icon字体路径变量*/\n$--font-path: "~element-ui/lib/theme-chalk/fonts";\n/*按需引入用到的组件的scss文件和基础scss文件*/\n@import "~element-ui/packages/theme-chalk/src/base.scss";\n/*按需引入组件*/\nimport {Rate,Row,Button} from \'element-ui\'\n')])])]),e("h3",{attrs:{id:"路由router跳转携带参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路由router跳转携带参数"}},[t._v("#")]),t._v(" 路由Router跳转携带参数")]),t._v(" "),e("p",[t._v("this.$router.push({\n// 由于动态路由也是传递params的，所以在 this.$router.push() 方法中 path不能和params一起使用，否则params将无效。需要用name来指定页面\n// path: ({path: '/advert/add', params: {typeList: this.typeList}}) 错误\n// 通过路由名称跳转，携带参数（已成功）\n// name: 'advertAdd', params: {typeList: this.typeList}\n});")]),t._v(" "),e("p",[t._v("接收：\nthis.listQuery.clueId = this.$route.query.clueId;\nthis.listQuery.cpid = this.$route.query.cpid;")]),t._v(" "),e("p",[t._v("页面间传值：\n// path: '/clue/detail', query: { clue: row }\t//query方式页面刷新不丢失\npath: '/clue/detail', query: { clueId: row.id, cpid: row.cpid } //但无法支持对象不丢失\n页面跳转携带参数还可以使用vuex")]),t._v(" "),e("h3",{attrs:{id:"public-index-html-初始页"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#public-index-html-初始页"}},[t._v("#")]),t._v(" public/index.html 初始页")]),t._v(" "),e("p",[t._v("插值：\n因为 index 文件被用作模板，所以你可以使用 lodash template 语法插入内容：\n<%= VALUE %> 用来做不转义插值；\n<%- VALUE %> 用来做 HTML 转义插值；\n<% expression %> 用来描述 JavaScript 流程控制。\n"),e("link",{attrs:{rel:"icon",href:"<%= BASE_URL %>favicon.ico"}}),t._v("\t//引用客户端环境变量")]),t._v(" "),e("h3",{attrs:{id:"指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[t._v("#")]),t._v(" 指令")]),t._v(" "),e("p",[t._v("v-bind——缩写：:，动态地绑定一个或多个特性，或一个组件 prop 到表达式。\n"),e("a",{class:t.klass,attrs:{href:t.url}},[t._v("click me")]),t._v(" "),e("a",{class:{active:t.isActive}},[t._v("click me")]),t._v(" //动态判断是否加载class\n"),t._v(" "),e("my-component",{attrs:{prop:t.someThing}}),t._v("\nv-on:——缩写：@，綁定事件\n"),t._v('\n<button @click.prevent="doThis">'),t._v('\n@click.native.prevent="onSubmit"  //监听根组件，阻止默认行为\nv-model：随表单控件类型不同而不同。\n限制：\n'),e("input"),t._v(" "),e("select",[e("textarea")])],1)])}),[],!1,null,null,null);e.default=n.exports}}]);