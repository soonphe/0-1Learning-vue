(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{241:function(e,t,s){e.exports=s.p+"assets/img/luoxiaosheng.3e3f64f6.svg"},242:function(e,t,s){e.exports=s.p+"assets/img/luoxiaosheng_learning.c39ce245.svg"},243:function(e,t,s){e.exports=s.p+"assets/img/luoxiaosheng_wechat.8efd3324.svg"},337:function(e,t,s){"use strict";s.r(t);var a=s(14),n=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_0-1learning"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0-1learning"}},[e._v("#")]),e._v(" 0-1Learning")]),e._v(" "),t("p",[t("img",{attrs:{src:s(241),alt:"alt text",title:"公众号"}}),e._v(" "),t("img",{attrs:{src:s(242),alt:"alt text",title:"学习"}}),e._v(" "),t("img",{attrs:{src:s(243),alt:"alt text",title:"微信"}})]),e._v(" "),t("h2",{attrs:{id:"认识vue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#认识vue"}},[e._v("#")]),e._v(" 认识vue")]),e._v(" "),t("p",[e._v("备注：学习之前最好具备HTML、CSS 和 JavaScript 的基础知识。")]),e._v(" "),t("h3",{attrs:{id:"vue安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue安装"}},[e._v("#")]),e._v(" VUE安装")]),e._v(" "),t("p",[e._v("vue的安装有两种方式")]),e._v(" "),t("ol",[t("li",[e._v("直接用 script 引入")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('对于制作原型或学习，你可以这样使用最新版本：\n<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"><\/script>\n\n对于生产环境，我们推荐链接到一个明确的版本号和构建文件，以避免新版本造成的不可预期的破坏：\n<script src="https://cdn.jsdelivr.net/npm/vue@2.6.12"><\/script>\n\n')])])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("使用 NPM 安装\n一句话解释NPM：一个包管理工具，类似yarn、maven都是项目包管理工具。(构建大型应用时推荐使用 NPM管理 VUE)\nNPM 能很好地和诸如 webpack 或 Browserify 模块打包器配合使用。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 最新稳定版\n$ npm install vue\n")])])]),t("h3",{attrs:{id:"vue实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue实例"}},[e._v("#")]),e._v(" VUE实例")]),e._v(" "),t("p",[e._v("创建一个 Vue 实例\n每个 Vue 应用都是通过用 Vue 函数创建一个新的 Vue 实例开始的：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("var vm = new Vue({\n  // 选项\n})\n")])])]),t("h3",{attrs:{id:"第一个hello-world"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一个hello-world"}},[e._v("#")]),e._v(" 第一个Hello World")]),e._v(" "),t("p",[t("em",[e._v("别问怎么学，问就是Hello World")])]),e._v(" "),t("p",[e._v("1.创建一个html文件\n你可以创建一个 HelloWord.html 文件，然后通过如下方式引入 Vue：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>Title</title>\n    \x3c!-- 开发环境版本，包含了有帮助的命令行警告 --\x3e\n    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"><\/script>\n</head>\n<body>\n<div id="app">\n    {{ message }}\n</div>\n</body>\n\n<script>\n    var app = new Vue({\n        el: \'#app\',\n        data: {\n            message: \'Hello World!\'\n        }\n    })\n<\/script>\n</html>\n')])])]),t("p",[e._v("你可以在浏览器新标签页中打开它，至此，我们已经成功创建了第一个 Vue 应用")]),e._v(" "),t("p",[e._v("声明式渲染：\n现在数据和 DOM（文档对象模型，HTML的文档document页面是一切的基础，没有它dom就无从谈起）已经被建立了关联，所有东西都是响应式的。\n当修改message的值，界面也会相应更新。")]),e._v(" "),t("h3",{attrs:{id:"使用vue-cli"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用vue-cli"}},[e._v("#")]),e._v(" 使用vue-cli")]),e._v(" "),t("p",[e._v("vue-cli：脚手架构建工具,通过一行命令快速创建一个vue应用\n安装：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm install -g @vue/cli\n# OR\nyarn global add @vue/cli\n")])])]),t("p",[e._v("创建一个项目：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("vue create hello-world\n# OR\nvue ui\n")])])]),t("p",[e._v("Vue CLI 有几个独立的部分——如果你看到了我们的源代码，你会发现这个仓库里同时管理了多个单独发布的包。")]),e._v(" "),t("p",[t("em",[e._v("CLI")]),e._v("\nCLI (@vue/cli) 是一个全局安装的 npm 包，提供了终端里的 vue 命令。它可以通过 vue create 快速搭建一个新项目，或者直接通过 vue serve 构建新想法的原型。你也可以通过 vue ui 通过一套图形化界面管理你的所有项目。"),t("br"),e._v("\n[CLI vue create命令详情]: https://cli.vuejs.org/zh/guide/creating-a-project.html")]),e._v(" "),t("p",[t("em",[e._v("CLI 服务")]),e._v("\nCLI 服务 (@vue/cli-service) 是一个开发环境依赖。它是一个 npm 包，局部安装在每个 @vue/cli 创建的项目中。\nCLI 服务是构建于 webpack（构建工具） 和 webpack-dev-server 之上的。它包含了：")]),e._v(" "),t("ul",[t("li",[e._v("加载其它 CLI 插件的核心服务；")]),e._v(" "),t("li",[e._v("一个针对绝大部分应用优化过的内部的 webpack 配置；")]),e._v(" "),t("li",[e._v("项目内部的 vue-cli-service 命令，提供 serve、build 和 inspect 命令。"),t("br"),e._v("\n[CLI服务详情]: https://cli.vuejs.org/zh/guide/cli-service.html")])]),e._v(" "),t("p",[t("em",[e._v("CLI 插件")]),e._v("\nCLI 插件是向你的 Vue 项目提供可选功能的 npm 包，例如 Babel/TypeScript 转译、ESLint 集成、单元测试和 end-to-end 测试等。Vue CLI 插件的名字以 @vue/cli-plugin- (内建插件) 或 vue-cli-plugin- (社区插件) 开头，非常容易使用。")]),e._v(" "),t("p",[e._v("当你在项目内部运行 vue-cli-service 命令时，它会自动解析并加载 package.json 中列出的所有 CLI 插件。")]),e._v(" "),t("p",[e._v("插件可以作为项目创建过程的一部分，或在后期加入到项目中。它们也可以被归成一组可复用的 preset。"),t("br"),e._v("\n[CLI插件详情]: https://cli.vuejs.org/zh/guide/plugins-and-presets.html")]),e._v(" "),t("h3",{attrs:{id:"vue项目结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue项目结构"}},[e._v("#")]),e._v(" Vue项目结构")]),e._v(" "),t("p",[e._v("使用vue-cli创建的项目结构会比较复杂")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("0-1Learning\n├── build -- 算法\n    └── build.js -- 项目构建相关代码\n├── mock -- mock接口模块\n├── node_modules -- 使用的nodeJs模块\n├── dist -- 编译打包输出目录\n├── public -- \n    ├── favicon.ico -- 页面图标\n    └── index.html -- 入口页面\n├── src -- 核心\n    ├── api -- 页面图标\n    ├── assets -- 页面图标\n    ├── components -- 页面图标\n    ├── layout -- 布局相关\n    ├── router -- 路由相关\n    ├── store -- vuex\n    ├── styles -- 页面图标\n    ├── utils -- 通用模块\n    └── views -- 页面相关\n├── static --  静态文件\n├── .editorconfig -- 定义代码格式\n├── .env.development --  开发环境变量\n├── .env.production -- 生产环境变量\n├── .env.staging -- 测试环境变量\n├── babel.config.js -- ES6语法编译配置\n├── .gitignore  -- git上传需要忽略的文件格式\n├── package.json -- 项目依赖\n├── README.md -- 项目说明\n└── vue.config.js -- 项目配置\n")])])]),t("h3",{attrs:{id:"vue项目依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue项目依赖"}},[e._v("#")]),e._v(" Vue项目依赖")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('    "axios": "^0.17.1", //给予promise的HTTP请求客户端\n//    "mock":"^0.1.1",  //生成随机数据，拦截 Ajax 请求\n    "babel-polyfill": "^6.26.0",  //用于实现实现浏览器不支持原生功能的代码\n    "element-ui": "^2.0.9", //前端组件库\n    "js-md5": "^0.7.3", //MD5加密\n    "jsencrypt": "^2.3.1",  // 加密工具\n    "normalize.css": "^7.0.0",  //相对于CSS reset更加平和\n    "vue": "^2.5.2",\n    "vue-core-image-upload": "^2.3.10", //图片上传\n    "vue-quill-editor": "^2.3.3", //富文本编辑器\n    "vue-router": "^3.0.1", //vue路由\n    "vuex": "^3.0.1"  //应用程序状态管理\n')])])]),t("h3",{attrs:{id:"vue文件结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue文件结构"}},[e._v("#")]),e._v(" vue文件结构")]),e._v(" "),t("p",[e._v("说明：在任一个*.vue文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<template>\n    template标签里写html代码，且template直接子级只能有一个标签。\n</template>\n<script>\n    script里面写js代码\n<\/script>\n<style scoped>\n    style标签里写样式\n</style>\n")])])]),t("h3",{attrs:{id:"运行和打包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行和打包"}},[e._v("#")]),e._v(" 运行和打包")]),e._v(" "),t("p",[e._v("vue打包\nvue-cli-service build 会在 dist/ 目录产生一个可用于生产环境的包，带有 JS/CSS/HTML 的压缩，和为更好的缓存而做的自动的 vendor chunk splitting。\n也可以通过npm run build来进行打包的操作")]),e._v(" "),t("p",[e._v("如何部署\n将打包出来的资源，基于Vue-Cli的一般是dist目录下有static目录和index.html文件，可以直接将这两个文件扔到服务端，但有时候，我们会直接将dist文件扔到服务端")])])}),[],!1,null,null,null);t.default=n.exports}}]);