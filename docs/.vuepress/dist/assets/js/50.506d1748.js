(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{241:function(t,n,e){t.exports=e.p+"assets/img/luoxiaosheng.3e3f64f6.svg"},242:function(t,n,e){t.exports=e.p+"assets/img/luoxiaosheng_learning.c39ce245.svg"},243:function(t,n,e){t.exports=e.p+"assets/img/luoxiaosheng_wechat.8efd3324.svg"},347:function(t,n,e){"use strict";e.r(n);var a=e(14),i=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_0-1learning"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_0-1learning"}},[t._v("#")]),t._v(" 0-1Learning")]),t._v(" "),n("p",[n("img",{attrs:{src:e(241),alt:"alt text",title:"公众号"}}),t._v(" "),n("img",{attrs:{src:e(242),alt:"alt text",title:"学习"}}),t._v(" "),n("img",{attrs:{src:e(243),alt:"alt text",title:"微信"}})]),t._v(" "),n("h2",{attrs:{id:"界面优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#界面优化"}},[t._v("#")]),t._v(" 界面优化")]),t._v(" "),n("p",[t._v("IOS绘图API:\n线条：重写drawRect(rect: CGRect)\nvar context = UIGraphicsGetCurrentContext()\nCGContextMoveToPoint(context ,100,100)\t\t//从哪里开始画\nCGContextAddLineToPoint(context ,100,200)\t//画直线，并指定终点\nCGContextStrokePath(context)\t\t\t//呈现")]),t._v(" "),n("p",[t._v("CGContextMovePoint(context ,100,100)\t\t//移动开始画第二条线\n。。。\n矩形：\nCGContextAddRect(。。。)\nCGContextFillPath(context)\n圆形：\n第一种：CGContextAddArc(。。。)\t\nCGContextSetRGBFillColor(。。。)\t//填充颜色\nCGContextFillPath(context)\n第二种：CGContextAddEllipseInRect()\t//在矩形内绘制，依照外壳而定")]),t._v(" "),n("p",[t._v("绘制图片：图片y轴相反，需要添加缩放为-1\nCGContextSaveGState(context)\t\t//保存当前Context状态\nCGContextTranslateCTM(context,10,400)\t//移动\nCGContextScalaCTM(context,1,-1)\t//缩放\nCGContextDrawImage(context,CGRect(x: 0 ,y: 0, width: 200, height: 200), uiImage初始化好的图片)\nCGContextRestoreState(context)\t//恢复状态，避免影响后续其他操作context的对象")]),t._v(" "),n("p",[t._v("简易画板：\nvar path= CGPathCreateMutable()\t//存储所有的图形\noverride func touchesBegan\t//触摸起始点\nvar p = touches.anyObject().locationInView(self)\nCGPathMoveToPoint(path, nil, p.x, p.y)\t//移动到绘画起始点")]),t._v(" "),n("p",[t._v("override func touchesMoves\t//移动点\nvar p = touches.anyObject().locationInView(self)\nCGPathAddLineToPoint(path, nil, p.x, p.y)\t//添加绘画终点\nsetNeedsDisplay()\t\t//执行重绘方法，即重新执行drawRect方法")]),t._v(" "),n("p",[t._v("override fun drawRect{\nvar context = UIGraphicsGetCurrentContext()\nCGContextAddPath(context, path)\nCGContextStrokePath(context)")]),t._v(" "),n("h3",{attrs:{id:"xcode常用项目模板"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#xcode常用项目模板"}},[t._v("#")]),t._v(" Xcode常用项目模板")]),t._v(" "),n("p",[t._v("项目模板：\nMaster-Detail Application：日志添加，编辑\nPage-Based Application：电子书模板\nTabbed Application：照片模板")]),t._v(" "),n("h3",{attrs:{id:"屏幕适配"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#屏幕适配"}},[t._v("#")]),t._v(" 屏幕适配：")]),t._v(" "),n("p",[t._v("匹配父级容器：\nAspect Fit\n图片匹配：Editor-》Pin-》Leading Space to Superview+其他三项")]),t._v(" "),n("p",[t._v("分割父级容器：\n①调整左右间距：\nEditor-》Pin-》Horizontal Spacing中间水平间距，左右边距\n②可以调整比例：\nEditor-》Pin-》Horizontal Spacing-》 左右边距-》Widths Equally可以调整比例")]),t._v(" "),n("p",[t._v("复杂布局适配：上下间距，两控件间距，左右间距")]),t._v(" "),n("h3",{attrs:{id:"ios自定义控件示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ios自定义控件示例"}},[t._v("#")]),t._v(" ios自定义控件示例")]),t._v(" "),n("p",[t._v("自定义控件属性：根据按钮state配置相应的图片")]),t._v(" "),n("p",[t._v("自定义控件效果：@INDesignable 可设计类")]),t._v(" "),n("h3",{attrs:{id:"ios动画效果及实现方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ios动画效果及实现方法"}},[t._v("#")]),t._v(" ios动画效果及实现方法")]),t._v(" "),n("p",[t._v("动画效果：\n添加视图：self.view.addSubview(img1)\n视图切换：UIView.transitionFromView(view1,view2)\t//从view1切换到view2")]),t._v(" "),n("p",[t._v("视图动画效果：\n①开始配置动画：UIView.beginAnimation(nil, context: ni)\n②设置动画：\nUIView.setAnimationTransition(...)\nUIView.setAnimationDuration(1.0)\n③提交动画：UIView.commitAnimations()")]),t._v(" "),n("p",[t._v("自定义动画：UIView.transitionWithView(img1, duration: 1.0,\noptions: UIViewAnimationOptions.TransitionNone, animations: 自定义动画方法, completion: 完成方法)")])])}),[],!1,null,null,null);n.default=i.exports}}]);