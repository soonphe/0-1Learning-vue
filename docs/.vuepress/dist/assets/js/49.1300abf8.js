(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{241:function(e,t,r){e.exports=r.p+"assets/img/luoxiaosheng.3e3f64f6.svg"},242:function(e,t,r){e.exports=r.p+"assets/img/luoxiaosheng_learning.c39ce245.svg"},243:function(e,t,r){e.exports=r.p+"assets/img/luoxiaosheng_wechat.8efd3324.svg"},346:function(e,t,r){"use strict";r.r(t);var a=r(14),n=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_0-1learning"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0-1learning"}},[e._v("#")]),e._v(" 0-1Learning")]),e._v(" "),t("p",[t("img",{attrs:{src:r(241),alt:"alt text",title:"公众号"}}),e._v(" "),t("img",{attrs:{src:r(242),alt:"alt text",title:"学习"}}),e._v(" "),t("img",{attrs:{src:r(243),alt:"alt text",title:"微信"}})]),e._v(" "),t("h2",{attrs:{id:"用户界面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用户界面"}},[e._v("#")]),e._v(" 用户界面")]),e._v(" "),t("h3",{attrs:{id:"ios项目结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ios项目结构"}},[e._v("#")]),e._v(" ios项目结构")]),e._v(" "),t("p",[e._v("Main.storyboard/Launch.storyboard:主界面UI\n是否使用自动布局use Auto layout（一般关闭）")]),e._v(" "),t("p",[e._v("选择控件(右上角+号)：例如（Image view图片控件，View Controller界面,Navigation controller界面）\nfile inspector(文件属性)：命名，文件路径等\nIdentity inspector：关联的Controller，Module等\nattribute inspector(控件属性)：，可分别设置Image View属性（图片链接，缩放等）和View属性（定位其实位置，背景等）\nsize inspector（位置大小属性）：其实位置，偏移量等")]),e._v(" "),t("p",[e._v("资源文件存放地址：xcassets（资产），可以配置图片不同尺寸，适配不同设备")]),e._v(" "),t("h3",{attrs:{id:"程序执行流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#程序执行流程"}},[e._v("#")]),e._v(" 程序执行流程")]),e._v(" "),t("p",[e._v("1.info.plist：程序启动读取\nLaunch screen interface file base name：设置启动时的storyboard\n2.View Controller：程序控制器\n重载方法：\nviewDidLoad：Controller的入口\ndidReceiveMemoryWarning：释放资源")]),e._v(" "),t("p",[e._v("关闭代码预览：miniMap\n关闭手机预览:canvas 快捷键option+command+return\nAVD快捷回到主界面：command+shift+H")]),e._v(" "),t("h3",{attrs:{id:"storyboard-添加entry-point"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#storyboard-添加entry-point"}},[e._v("#")]),e._v(" storyboard 添加Entry point")]),e._v(" "),t("p",[e._v("1、选择要添加入口的Controller\n2、然后在右侧菜单栏。选择Show the Attributes inspector\n3、选中is initial View Controller.")]),e._v(" "),t("h3",{attrs:{id:"storyborad中界面跳转-按住control按钮拖动-可在左侧或视图中拖动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#storyborad中界面跳转-按住control按钮拖动-可在左侧或视图中拖动"}},[e._v("#")]),e._v(" storyborad中界面跳转：按住control按钮拖动（可在左侧或视图中拖动）")]),e._v(" "),t("p",[e._v("跳转模式：选择present modally模式")]),e._v(" "),t("p",[e._v("返回界面：第二个界面绑定按钮控件，拖动选择Action事件\n返回界面只需要杀死当前controller\nself.dissmissModalViewControllerAnimated(true)  //是否呈现动画效果")]),e._v(" "),t("h3",{attrs:{id:"控件与swift类绑定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#控件与swift类绑定"}},[e._v("#")]),e._v(" 控件与swift类绑定")]),e._v(" "),t("ul",[t("li",[e._v("storyboard绑定controller：\n删除storyboard中的原有控制器，在storyboard新增viewControlle\n添加与controler对应的控制器（选择Cocoa Touch Class，继承UIViewController），\nstoryboard中设置class = 新建的viewController控制器的名字")])]),e._v(" "),t("h3",{attrs:{id:"源代码添加控件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#源代码添加控件"}},[e._v("#")]),e._v(" 源代码添加控件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('        //代码添加控件\n        var label = UILabel(frame: <#T##CGRect#>(x: 50,y: 50,width: 100,height: 100))\n        label.text = "Hello"\n        view.addSubview(label)\n')])])]),t("h3",{attrs:{id:"控件绑定代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#控件绑定代码"}},[e._v("#")]),e._v(" 控件绑定代码")]),e._v(" "),t("p",[e._v("control+option+command+ enter  打开Assitant")]),e._v(" "),t("p",[e._v("以下方式二选一：")]),e._v(" "),t("ol",[t("li",[e._v("拖动控件至程序界面（直至出现横杠）")]),e._v(" "),t("li",[e._v("双击控件选择reference outlet按钮拖动（直至出现横杠）")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    @IBOutlet var iv:UIImageView!\n")])])]),t("h3",{attrs:{id:"事件绑定代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定代码"}},[e._v("#")]),e._v(" 事件绑定代码")]),e._v(" "),t("p",[e._v("control+option+command+ enter  打开Assitant")]),e._v(" "),t("p",[e._v("双击控件，选择touch up inside，选择viewController中新建方法")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('    @IBAction func btnClick(sender:AnyObject){\n        print("click ")\n    }\n')])])]),t("h3",{attrs:{id:"storyboard打开对应的代码-assitant"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#storyboard打开对应的代码-assitant"}},[e._v("#")]),e._v(" storyboard打开对应的代码（Assitant）")]),e._v(" "),t("p",[e._v("右上角——找到Assitant（快捷键 control+option+command+ enter）")]),e._v(" "),t("h3",{attrs:{id:"constraints-约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#constraints-约束"}},[e._v("#")]),e._v(" Constraints 约束")]),e._v(" "),t("p",[e._v("添加约束（按住control拖动）")]),e._v(" "),t("h3",{attrs:{id:"允许使用http请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#允许使用http请求"}},[e._v("#")]),e._v(" 允许使用http请求")]),e._v(" "),t("p",[e._v("编辑info.plist\n添加：\nApp Transport Security Settings\nAllow Arbitrary Loads       YES")]),e._v(" "),t("h3",{attrs:{id:"界面跳转-segue跳转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#界面跳转-segue跳转"}},[e._v("#")]),e._v(" 界面跳转（segue跳转）")]),e._v(" "),t("p",[e._v("添加storyboard reference，（左侧选择源View，control安装拖动到reference）模式选择present modally，\n在storyboard中 添加Storyboard ID，并选择Use Storyboard ID\n注：源View不应该选择控件跳转，而是选择整个页面，否则出现页面重叠")]),e._v(" "),t("h3",{attrs:{id:"tableviewcontroller和tableview用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tableviewcontroller和tableview用法"}},[e._v("#")]),e._v(" TableViewController和TableView用法")]),e._v(" "),t("p",[e._v("直接使用TableView作为Controller和使用TableView作为控件")]),e._v(" "),t("h3",{attrs:{id:"tableview添加property-plist作为数据文件-实现uitableviewdatasource"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tableview添加property-plist作为数据文件-实现uitableviewdatasource"}},[e._v("#")]),e._v(" tableView添加property.plist作为数据文件——实现UItableViewDataSource")]),e._v(" "),t("h3",{attrs:{id:"如何和列表交互-实现uitableviewdelegate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何和列表交互-实现uitableviewdelegate"}},[e._v("#")]),e._v(" 如何和列表交互——实现UItableViewDelegate")]),e._v(" "),t("h3",{attrs:{id:"nib文件做ios界面设计-xcode4之前使用interfacebuilder做界面设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nib文件做ios界面设计-xcode4之前使用interfacebuilder做界面设计"}},[e._v("#")]),e._v(" nib文件做IOS界面设计：（Xcode4之前使用InterfaceBuilder做界面设计）")]),e._v(" "),t("p",[e._v("@IBXX : InterfaceBuilder 界面设计器程序\n新建xib文件，new view（跟绑定storyboard操作一样）")]),e._v(" "),t("h3",{attrs:{id:"跳转页面中传递数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跳转页面中传递数据"}},[e._v("#")]),e._v(" 跳转页面中传递数据：")]),e._v(" "),t("p",[e._v('跳转：self.presenModalViewController(MyViewController(nibName: "MyViewController",bundle: nil), animated: true)')]),e._v(" "),t("p",[e._v('传递数据：\nlet vc = MyViewController(nibName: "MyViewController",bundle: nil)\nvc.labelContent = input.text\t//直接给跳转页面的变量赋值\nself.presenModalViewController(vc, animated: true)\n第二个界面定义变量：\nvar lableContent: String = ""')]),e._v(" "),t("p",[e._v("第二个界面向第一个界面传递数据：调用父级Controller并赋值\nself.parentViewController")]),e._v(" "),t("h3",{attrs:{id:"按钮添加圆角"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按钮添加圆角"}},[e._v("#")]),e._v(" 按钮添加圆角：")]),e._v(" "),t("p",[e._v("首先点击按钮，找到inspector，在 user defined runtime attributes中添加一行，输入key为layer.cornerRadius， 类型为Number ，value为数字（数字越大，圆角越大）")]),e._v(" "),t("h3",{attrs:{id:"常见的uikit中的view"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的uikit中的view"}},[e._v("#")]),e._v(" 常见的UIkit中的View")]),e._v(" "),t("ul",[t("li",[e._v("UIView：\n基础view")]),e._v(" "),t("li",[e._v("UIScrollView：\n滑动布局")]),e._v(" "),t("li",[e._v("UICollectionView ：\n默认没有表头，区里面是项Item，布局使用UICollectionViewLayOut的子类，可以显示多列")]),e._v(" "),t("li",[e._v("UITableView ：\n有表头和表尾，区里面是单元格Cell")])]),e._v(" "),t("h3",{attrs:{id:"常见的uikit中的控件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的uikit中的控件"}},[e._v("#")]),e._v(" 常见的UIkit中的控件")]),e._v(" "),t("ul",[t("li",[e._v("UIImageView")])]),e._v(" "),t("h3",{attrs:{id:"界面跳转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#界面跳转"}},[e._v("#")]),e._v(" 界面跳转")]),e._v(" "),t("p",[e._v("常用的跳转方法有四种：present、dissmiss、push、pop.前两中不含导航栏跳转、后两种导航栏")]),e._v(" "),t("p",[e._v("1.present :跳转")]),e._v(" "),t("p",[e._v('let storyboard = UIStoryboard(name: "Main", bundle: nil)\nguard let secondVC = storyboard.instantiateViewController(withIdentifier: "SecondViewControllerID") as? SecondViewController else {  return }\nsecondVC.myStr="wrw"\nself.present(secondVC, animated: true, completion: nil)\n2.dismiss:返回')]),e._v(" "),t("p",[e._v("self.dismiss(animated: true, completion: nil)\n3.push跳转（含导航栏）")]),e._v(" "),t("p",[e._v('let storyboard = UIStoryboard(name: "Main", bundle: nil)\nguard let threeVC = storyboard.instantiateViewController(withIdentifier: "threeViewControllerID") as? threeViewController else {  return }\nself.navigationController?.pushViewController(threeVC, animated: true)\n4.pop返回')]),e._v(" "),t("p",[e._v("self.navigationController?.popViewController(animated: true)")]),e._v(" "),t("p",[e._v("###【拓展-如何代码中给页面添加导航栏】\n1.给第一个根控制器添加导航栏")]),e._v(" "),t("p",[e._v('let storyboard = UIStoryboard(name: "Main", bundle: nil)\nguard let secondVC = storyboard.instantiateViewController(withIdentifier: "SecondViewControllerID") as? SecondViewController else {  return }\nlet nav=UINavigationController(rootViewController: secondVC)\nself.window?.rootViewController=nav')]),e._v(" "),t("p",[e._v("2.该页面没有导航栏，用present跳转，给下一个页面添加导航栏，且下一个页面可以push跳转：如给secondVC控制器添加导航栏。")]),e._v(" "),t("p",[e._v('let storyboard = UIStoryboard(name: "Main", bundle: nil)\nguard let secondVC = storyboard.instantiateViewController(withIdentifier: "SecondViewControllerID") as? SecondViewController else {  return }\nsecondVC.myStr="bbjjj"\nlet nav=UINavigationController(rootViewController: secondVC)\nself.present(nav, animated: true, completion: nil)')]),e._v(" "),t("p",[e._v('###【拓展-加载xib】\n加载xib view：\nlet myView = Bundle.main.loadNibNamed("ActivityAlertView", owner: nil, options: nil)?.first as? ActivityAlertView\nmyView?.frame = CGRect(x: 0, y: 0, width: self.view.frame.width, height: self.view.frame.height)\nself.view.addSubview(myView ?? ActivityAlertView() )')])])}),[],!1,null,null,null);t.default=n.exports}}]);