(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{241:function(t,a,e){t.exports=e.p+"assets/img/luoxiaosheng.3e3f64f6.svg"},242:function(t,a,e){t.exports=e.p+"assets/img/luoxiaosheng_learning.c39ce245.svg"},243:function(t,a,e){t.exports=e.p+"assets/img/luoxiaosheng_wechat.8efd3324.svg"},326:function(t,a,e){"use strict";e.r(a);var n=e(14),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_0-1learning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-1learning"}},[t._v("#")]),t._v(" 0-1Learning")]),t._v(" "),a("p",[a("img",{attrs:{src:e(241),alt:"alt text",title:"公众号"}}),t._v(" "),a("img",{attrs:{src:e(242),alt:"alt text",title:"学习"}}),t._v(" "),a("img",{attrs:{src:e(243),alt:"alt text",title:"微信"}})]),t._v(" "),a("h2",{attrs:{id:"ui和控件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ui和控件"}},[t._v("#")]),t._v(" UI和控件")]),t._v(" "),a("h3",{attrs:{id:"android-六大布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#android-六大布局"}},[t._v("#")]),t._v(" Android 六大布局")]),t._v(" "),a("p",[t._v("LinearLayout 线性布局\nRelativeLayout 相对布局\nFrameLayout 帧布局——布局没有任何的定位方式，所有的控件都会摆放在布局的左上角\nTableLayout 表格布局——配合TableRow使用")]),t._v(" "),a("p",[t._v("GridLayout 网格布局\nAbsoluteLayout 绝对布局")]),t._v(" "),a("h4",{attrs:{id:"linearlayout-线性布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linearlayout-线性布局"}},[t._v("#")]),t._v(" LinearLayout 线性布局")]),t._v(" "),a("p",[t._v('线性布局，如名字所描述的那样，这个布局将它所包含的控件在线性方向上一次排列，方向分为 水平方向和数值方向。\n属性 android:orientation = “vertical” | “horizontal” 竖直或水平，默认水平\n属性 android:layout_gravity = “top” | “center” | “bottom” 内部的布局方式\n属性 android:gravity = “top”|"center”|“bottom” 相对于父容器的对齐方式\n属性 android:layout_weidht 使用比例方式执行控件的大小，在手机屏幕适配方面起到非常重要的作用')]),t._v(" "),a("h3",{attrs:{id:"常用控件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用控件"}},[t._v("#")]),t._v(" 常用控件")]),t._v(" "),a("p",[t._v("TextView 文本控件\nButton  按钮控件\nEditText    输入文件控件\nImageView   图片控件\nProgressBar 进度条控件\nAlertDialog 对话框控件\nProgressDialog  对话框进度条")]),t._v(" "),a("h3",{attrs:{id:"控件属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控件属性"}},[t._v("#")]),t._v(" 控件属性")]),t._v(" "),a("p",[t._v('android:id="@+id/text_view" 指定控件ID，唯一\nandroid:layout_width="match_parent" 控件宽度，这里是对齐父布局\nandroid:layout_height="wrap_content"    控件高度\nandroid:text="This is TextView" />  控价要显示的文本\nandroid:textSize="24sp" 文字大小\nandroid:textColor="#00ff00" 文字颜色\nandroid:hint="Type something here"  提示文本\nandroid:maxLines="2"    最多行数\nandroid:src="@drawable/ic_launcher" //指定图片')]),t._v(" "),a("p",[t._v('android:layout_alignParentLeft="true"   指定图片位置\nandroid:layout_alignParentTop="true"    指定图片位置')]),t._v(" "),a("p",[t._v('android:gravity 来指定文字的对齐方式，可选值有top、bottom、left、right、center等， 可以用“ | ” 来同时指定多个值， 这里我们指定的"center" ，')]),t._v(" "),a("h3",{attrs:{id:"获取控件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取控件"}},[t._v("#")]),t._v(" 获取控件")]),t._v(" "),a("p",[t._v("button = (Button) findViewById(R.id.button);")]),t._v(" "),a("h3",{attrs:{id:"控件监听器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控件监听器"}},[t._v("#")]),t._v(" 控件监听器：")]),t._v(" "),a("p",[t._v("1.匿名类")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("button.setOnClickListener(new OnClickListener() {\n    @Override\n    public void onClick(View v) {\n    // 在此处添加逻辑\n    }\n});\n")])])]),a("p",[t._v("2.实现接口\nactivity implements OnClickListener\n控件绑定监听器：button.setOnClickListener(this);\n实现onClick方法")]),t._v(" "),a("h3",{attrs:{id:"自定义布局和自定义控件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义布局和自定义控件"}},[t._v("#")]),t._v(" 自定义布局和自定义控件")]),t._v(" "),a("p",[t._v("自绘控件——extends View，实现绘制方法\n组合控件——将几个系统原生的控件组合到一起，例：标题栏\n继承控件——继承已有控件，增加新功能")]),t._v(" "),a("p",[t._v("例:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public class TitleLayout extends LinearLayout {\npublic TitleLayout(Context context, AttributeSet attrs) {\nsuper(context, attrs);\nLayoutInflater.from(context).inflate(R.layout.title, this);\n}\n}\n")])])]),a("h3",{attrs:{id:"单位和尺寸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单位和尺寸"}},[t._v("#")]),t._v(" 单位和尺寸")]),t._v(" "),a("p",[t._v("在布局文件中指定宽高的固定大小有以下常用单位可供选择：px、pt、dp 和sp")]),t._v(" "),a("p",[t._v("px 是像素的意思，即屏幕中可以显示的最小元素单元\npt 是磅数的意思，1 磅等于1/72 英寸，一般pt 都会作为字体的单位来使用。\ndp 是密度无关像素的意思，也被称作dip，和px 相比，它在不同密度的屏幕中的显示比例将保持一致。\nsp 是可伸缩像素的意思，它采用了和dp 同样的设计理念，解决了文字大小的适配问题。")]),t._v(" "),a("p",[t._v("总结一下，在编写Android 程序的时候，尽量将控件或布局的大小指定成match_parent或wrap_content，\n如果必须要指定一个固定值，则使用dp 来作为单位，指定文字大小的时候使用sp 作为单位。")])])}),[],!1,null,null,null);a.default=r.exports}}]);